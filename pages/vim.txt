==== Vim ====

=== Tips ===

| set path=**     | Cherche dans le répertoire courant.                                    |
| ts /ma fonction | Cherche la fonction dans tous les  fichiers sources.                   |
| set mouse=v     | Fais des sélections avec la souris pour coller dans une autre fenêtre. |
| :r !ls          | écrit le retour de la commande ls dans le fichier courant              |
| :tab sp         | déplace un panel dans un onglet à part                                 |
| r=              | remplace tout les caractères sélectionnés pas des =                    |

=== Plugins ===

== XML ==

Le plugin matchit permet d'utiliser % pour les balises. Pour
l'installer il suffit de télécharger
[[http://www.vim.org/scripts/script.php?script_id=39|matchit]] et l'extraire dans **.vim/**.

Le plugin xml permet de fermer automatiquement les balses.
Pour l'installer il suffit de télécharger le fichier 
[[http://www.vim.org/scripts/script.php?script_id=1397|xml]] et de le mettre dans
**.vim/ftplugin** et dans **.vim/indent**. Si à la suite de ça on n'a plus la coloration
synthaxique il suffit de faire :set filetype=xml dans vim.


== Asciidoc ==

Le plugin asciidoc permet d'avoir la coloration syntaxique pour 
les fichiers asciidoc. Pour l'installer il faut télécharger le fichier
[[https://github.com/dagwieers/asciidoc-vim|ascidoc-vim]] et le mettre 
dans le **.vim/syntax** et mettre dans **.vimrc**

<code vim>
    set syntax=asciidoc
</code>

== Seqdiag and Blockdiag ==

Ces plugins permettent d'avoir la coloration syntaxique pour les fichiers sources pour les diagrammes
de séquence et les diagrammes de block.

Pour les installer il faut télécharger les fichiers
[[https://raw.github.com/adogear/vim-blockdiag-series/master/syntax/seqdiag.vim|seqdiag.vim]] et
[[https://raw.github.com/adogear/vim-blockdiag-series/master/syntax/blockdiag.vim|blockdiag.vim]] et les
mettre dans **.vim/syntax** et mettre dans **.vimrc**.

<code vim>
    au BufRead,BufNewFile *.seqdiag setfiletype seqdiag
    au BufRead,BufNewFile *.blockdiag setfiletype seqdiag
</code>

Il faudra ensuite mettre l'extension **.seqdiag** pour les fichiers sources des diagrammes de séquence 
et l'extension **.blockdiag** pour les diagramme de block.

.. _dirdiff:

== DirDiff ==

Le plugin dirdiff permet de faire un diff entre 2 répertoires.
Télécharger [[http://www.vim.org/scripts/download_script.php?src_id=16171|DirDiff]] et le
mettre dans le répertoire **.vim/plugin/**.

Modifier **.vimrc** :

<code vim>
    let g:DirDiffDynamicDiffText = 1
</code>

Pour une bonne utilisation avec mercurial.

== neocomplcache ==

[[https://github.com/Shougo/neocomplcache.vim.git|neocomplcache.vim]]

== Vundle pour gérer les plugins ==

Pour gérer plus facilement les plugins vim utiliser Vundle.

<code bash>
    git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/vundle
</code>

Pour l'utiliser, ajouter dans votre **~/.vimrc**:

<code vim>
   set rtp+=~/.vim/bundle/vundle/
   call vundle#begin()

   " use vundle to manage vundle
   Bundle 'gmarik/vundle'

   call vundle#end()
</code>

Ensuite pour installer des nouveau plugins il suffit d'ajouter:

<code vim>
    Bundle 'bling/airline'
</code>

Pour installer le plugin airline dans le repo bling sur github.com.

Ensuite il suffit de lancer dans vim:

<code vim>
    :PluginInstall
</code>

== NerdCommenter ==

Permet de commenter facilement des lignes de codes.

Installation avec Vundle:

<code vim>
    Bundle 'scrooloose/nerdcommenter
</code>

Ensuite il faut utiliser:

| \ci | en mode visuel pour commenter une seule ligne            |
| \cs | en mode visuel pour commenter plusieurs lignes d'un coup |

== Foldcomments ==

Permet de replier tous les commentaires d'un fichier source.

Installation avec Vundle:

<code vim>
    Bundle 'lkdjiin/vim-foldcomments'
</code>

Ensuite il suffit de taper:

<code vim>
    FoldComments
</code>


=== Configuration ===

== Pour une bonne indentation et coloration syntaxique ==

<code vim>
    set encoding=utf-8
    let g:load_doxygen_syntax=1
    set modeline
    set autoindent
    set cindent
    set expandtab
    set ts=8
    set sts=4
    set sw=4
    set fo+=ro
    set cinoptions=N-s,g0
</code>

== Meilleure gestion de la complétion des paths ==

<code vim>
    set wildmode=longest,full
    set wildmenu
</code>

== Fold ==

Pour avoir les replis dans notre code source il faut ajouter : 

<code vim>
    set foldmethod=syntax
</code>

dans notre fichier **.vimrc**.

On peut également utiliser les replis avec les balises xml en ajoutant :

<code vim>
    let g:xml_syntax_folding=1
    au FileType xml setlocal foldmethod=syntax
</code>

== Recherche intelligente ==

Ajouter à votre **.vimrc** :

<code vim>
    set hlsearch
    set incsearch
    set ignorecase
    set smartcase
</code>

== Colorer certains templates ==

<code vim>
    hi def link Todo TODO
    syn keyword Todo TODO FIXME XXX DEBUG
</code>

== Utilisation de taglist ==

| <Enter> ou double-clic | Saut vers l'endroit où est défini le tag situé sous le curseur                                                                 |
| o                      | Saut vers l'endroit où est définit le tag situé sous le curseur dans une nouvelle fenêtre                                      |
| t                      | Saut vers un tag en ouvrant un nouvel onglet, si le fichier est déjà ouvert dans un onglet alors on se déplace dans cet onglet |
| Ctrl-t                 | Saut vers un tag dans un nouvel onglet                                                                                         |
| u                      | Mise à jour des tags listés dans la fenêtre                                                                                    |
| d                      | Supprime le tag ou le fichier sous le curseur                                                                                  |
| x                      | Zoom + ou Zoom - sur la fenêtre des tags                                                                                       |
| \+                     | Ouvre un pli                                                                                                                   |
| \-                     | Ferme un pli                                                                                                                   |
| \*                     | Ouvre tous les plis                                                                                                            |
| \=                     | Ferme tous les plis                                                                                                            |
| q                      | Ferme la fenêtre des tags                                                                                                      |
| <F1>                   | Affiche l'aide                                                                                                                 |

== Orthographe ==

Pour activer la correction orthographique en anglais:

<code vim>
    :set spelllang=en spell
</code>

Il doit y avoir un répertoire **$HOME/.vim/spell/** qui contient :

- [[http://ftp.vim.org/vim/runtime/spell/en.utf-8.spl|en.utf-8.spl]]
- [[http://ftp.vim.org/vim/runtime/spell/en.utf-8.sug|en.utf-8.sug]]

| ]s | Va au prochain mot erronné.  |
| [s | Va au mot erronné précédent. |
| z= | Ouvre les possibilité.       |

